@model GesStaDemo.Models.Entities.Offre

@{
    ViewBag.Title = "Modification de l'offre";
    Layout = "~/Views/Admin/_AdminLayout.cshtml";
}



@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.Label("Stage", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LibOffre, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LibOffre, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Début de stage", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DebutStage, new { htmlAttributes = new { @class = "form-control", id = "date-picker", type = "date" } })
                @Html.ValidationMessageFor(model => model.DebutStage, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Fin de stage", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FinStage, new { htmlAttributes = new { @class = "form-control", id = "date-picker2", type = "date" } })
                @Html.ValidationMessageFor(model => model.FinStage, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Remunerer, htmlAttributes: new { @class = "control-label col-md-2" })

            <div class="checkbox">
                @Html.CheckBoxFor(model => model.Remunerer, new { htmlAttributes = new { @class = "checkbox", style = " margin : 30px;" } })
                @Html.ValidationMessageFor(model => model.Remunerer, "", new { @class = "text-danger" })
            </div>

        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Enregistrer" class="btn btn-info" />
                <a href="" type="reset" value="" class="btn btn-default"><i class="fa fa-redo"></i></a>
                <a href="@Url.Action("Liste","Admin")" type="submit" value="" class="btn btn-default"><i class="fa fa-arrow-left"></i></a>
            </div>
        </div>
    </div>
}
<!--<script>
    var date = new Date();
    document.getElementById("date-picker").min = date.getDate().split('/').reverse().join('-');

    function addMonths(date, months) {
        var d = date.getDate();
        date.setMonth(date.getMonth() + +months);
        if (date.getDate() != d) {
            date.setDate(0);
        }
        return date;
    }

    document.getElementById("date-picker").onchange = function () {
        let d = this.value.split('-')
        // console.log(d[0],d[1]-1,d[2])
        // console.log(new Date(d[0],d[1]-1,d[2]))
        // console.log()
        document.getElementById("date-picker2").min = this.value
        document.getElementById("date-picker2").max = addMonths(new Date(d[0], d[1] - 1, d[2]), 1).toLocaleDateString().split('/').reverse().join('-');
    }
</script>-->
