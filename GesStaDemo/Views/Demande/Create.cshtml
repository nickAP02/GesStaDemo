@model GesStaDemo.Models.Entities.Demande

@{
    var db = new GesStaDbContext();
    ViewBag.TypeDeStage = new SelectList(db.Offres, "OffreId", "LibOffre");
    ViewBag.Title = "Dépôt de demande";
    Layout = "~/Views/Home/_LayoutPage.cshtml";
}

<h2>Demande</h2>

@using (Html.BeginForm("Create", "Demande", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Nom, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Nom, new { htmlAttributes = new { @class = "form-control", placeholder = "AMA" } })
                @Html.ValidationMessageFor(model => model.Nom, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Prénom", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Prenom, new { htmlAttributes = new { @class = "form-control", placeholder = "Kwatcha" } })
                @Html.ValidationMessageFor(model => model.Prenom, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Sexe, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="col-md-2">
                    @Html.Label("F", htmlAttributes: new { @class = "checkbox-label" })
                    <input type="radio" name="sexe" value="F" />
                    @Html.Label("M", htmlAttributes: new { @class = "checkbox-label" })
                    <input type="radio" name="sexe" value="M" />
                    @Html.ValidationMessageFor(model => model.Sexe, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Date de naissance", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DateNaissance, new { htmlAttributes = new { @class = "form-control", type = "date" } })
                @Html.ValidationMessageFor(model => model.DateNaissance, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Nationalité", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Nationalite, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Nationalite, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Numero de téléphone", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Telephone, new { htmlAttributes = new { @class = "form-control", type = "tel", placeholder = "90280728" } })
                @Html.ValidationMessageFor(model => model.Telephone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input class="form-control" type="email"  name="Email" placeholder="amakwatcha@gmail.com" />
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Stage", "Type de stage", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("TypeDeStage", null, htmlAttributes: new { @class = "form-control" })
                
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Curriculum, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" name="CV" accept=".pdf" />
                @Html.ValidationMessageFor(model => model.CV, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" hidden>
            @Html.LabelFor(model => model.Accepter, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10" hidden>
                <div class="checkbox">
                    @Html.EditorFor(model => model.Accepter)
                    @Html.ValidationMessageFor(model => model.Accepter, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>   
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Valider" onclick="" class="btn btn-primary" />
                <input type="reset" value="Annuler" class="btn btn-default" />
            </div>

        </div>
    </div>

 
}
<script type="text/javascript">

    async function reception() {
        window.alert("Votre demande a été envoyée !")
    }
</script>